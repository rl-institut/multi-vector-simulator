2018-01-01 00:00:00  638.00000
2018-01-01 01:00:00  756.00000
2018-01-01 02:00:00  857.00000
2018-01-01 03:00:00  935.00000
2018-01-01 04:00:00  991.42105
2018-01-01 05:00:00  992.40000
2018-01-01 06:00:00  983.00000
2018-01-01 07:00:00  935.00000
2018-01-01 08:00:00  857.00000
2018-01-01 09:00:00  756.00000
2018-01-01 10:00:00  638.00000
2018-01-01 11:00:00  512.00000
2018-01-01 12:00:00  386.00000
2018-01-01 13:00:00  268.00000
2018-01-01 14:00:00  167.00000
2018-01-01 15:00:00   89.70000
2018-01-01 16:00:00   41.00000
2018-01-01 17:00:00   24.40000
2018-01-01 18:00:00   41.00000
2018-01-01 19:00:00   89.70000
2018-01-01 20:00:00  167.00000
2018-01-01 21:00:00  268.00000
2018-01-01 22:00:00  386.00000
2018-01-01 23:00:00  512.00000


2018-01-01 00:00:00  638.00000
2018-01-01 01:00:00  756.00000
2018-01-01 02:00:00  857.00000
2018-01-01 03:00:00  935.00000
2018-01-01 04:00:00  991.42105
2018-01-01 05:00:00  992.40000
2018-01-01 06:00:00  983.00000
2018-01-01 07:00:00  935.00000
2018-01-01 08:00:00  857.00000
2018-01-01 09:00:00  756.00000
2018-01-01 10:00:00  638.00000
2018-01-01 11:00:00  512.00000
2018-01-01 12:00:00  386.00000
2018-01-01 13:00:00  268.00000
2018-01-01 14:00:00  167.00000
2018-01-01 15:00:00   89.70000
2018-01-01 16:00:00   41.00000
2018-01-01 17:00:00   24.40000
2018-01-01 18:00:00   41.00000
2018-01-01 19:00:00   89.70000
2018-01-01 20:00:00  167.00000
2018-01-01 21:00:00  268.00000
2018-01-01 22:00:00  386.00000
2018-01-01 23:00:00  512.00000
2018-01-02 00:00:00        NaN


Somehow those Nan appear in the last timestep in 0.5.1dev1
If I use infer_last_interval=False/True it does not change anything, at the the last timestep the flow is Nan

I solved the problem temporarily by getting rid of nan values

and I get almost the same reports, except for the battery input and output power which are non-existent for 0.5.1dev1 version

the constraints need an update based on pyomo code apparently


